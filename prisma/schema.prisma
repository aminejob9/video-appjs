generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admins {
  id          Int     @id @default(autoincrement())
  firstName   String? @db.VarChar(255)
  lastName    String? @db.VarChar(255)
  email       String? @unique @db.VarChar(255)
  phoneNumber Int?
  role        String? @default("admin") @db.VarChar(255)
  status      String? @db.VarChar(255)
  username    String? @unique @db.VarChar(255)
  picture     Bytes?  @db.Blob
}

model categories {
  id          Int     @id @default(autoincrement())
  name        String? @unique(map: "name") @db.VarChar(255)
  status      String? @db.VarChar(255)
  picture     Bytes?  @db.Blob
  description String? @db.Text
  // rooms       rooms[]
}

model notifications {
  id          Int     @id @default(autoincrement())
  id_receiver Int?
  content     String? @db.Text
  status      String? @db.VarChar(255)
}

model rooms {
  id            Int         @id @default(autoincrement())
  ref           String?     @db.VarChar(255)
  id_user       Int?        
  name          String?     @unique(map: "name") @db.VarChar(255)
  status        String?     @db.VarChar(255)
  description   String?     @db.VarChar(255)
  max           Int?        @default(10)
  name_category String?     @db.VarChar(255)
  // categories    categories? @relation(fields: [name_category], references: [name], onDelete: Restrict, onUpdate: Restrict, map: "rooms_ibfk_1")
  // videos        videos[]

  // @@index([name_category], map: "name_category")
}

model users {
  id             Int       @id @default(autoincrement())
  email          String    @unique @db.VarChar(255)
  username       String    @unique @db.VarChar(255)
  password       String    @db.VarChar(255)
  type           String    @default("basic") @db.VarChar(255)
  state          String    @default("waiting") @db.VarChar(255)
  server         String?    @db.VarChar(255)
  privateKey     String?    @db.VarChar(255)
  verified_email Boolean   @default(false)
  firstName      String?   @db.VarChar(255)
  lastName       String?   @db.VarChar(255)
  birthday       DateTime? @db.Date
  country        String? @db.VarChar(255)
  city           String? @db.VarChar(255) 
  phone          Int? 
  
}

model videos {
  id        Int       @id @default(autoincrement())
  name      String?   @db.VarChar(255)
  date      DateTime? @db.DateTime(0)
  status    String?   @db.VarChar(255)
  ref_video String?   @db.VarChar(255)
  ref_record String?  @db.VarChar(255)
  id_room   Int?
  // rooms     rooms?    @relation(fields: [id_room], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "videos_ibfk_1")

  @@index([id_room], map: "id_room")
}

model subscribers{
  id        Int       @id @default(autoincrement())
  id_user   Int       
  id_room   Int      
  date      DateTime? @db.DateTime(0)
}